package com.liucc.cli.command;

import com.liucc.model.DataModel;
import lombok.Data;
import picocli.CommandLine;

@CommandLine.Command(name = "generate", description = "生成代码", mixinStandardHelpOptions = true)
@Data
public class TestGroupCommand implements Runnable {
    @CommandLine.Option(names = {"-g", "--needGit"}, arity = "0..1", description = "是否生成 .gitignore 文件", interactive = true, echo = true)
    private boolean needGit = true;
    @CommandLine.Option(names = {"-l", "--loop"}, arity = "0..1", description = "是否生成循环", interactive = true, echo = true)
    private boolean loop = false;

    static DataModel.MainTemplate mainTemplate = new DataModel.MainTemplate();

    @CommandLine.Command(name = "mainTemplate", description = "用于生成核心模板文件", mixinStandardHelpOptions = true)
    @Data
    static class MainTemplateCommand implements Runnable{

        @CommandLine.Option(names = {"-a", "--author"}, arity = "0..1", description = "作者注释", interactive = true, echo = true)
        private String author = "liucc";
        @CommandLine.Option(names = {"-o", "--outputText"}, arity = "0..1", description = "输出信息", interactive = true, echo = true)
        private String outputText = "sum=";

        @Override
        public void run() {
            mainTemplate.author = author;
            mainTemplate.outputText = outputText;
        }
    }

    @Override
    public void run() {
        System.out.println(needGit);
        System.out.println(loop);
        // 如果用户开启 loop，再让用户进一步填写核心配置信息
        if (loop){
            System.out.println("请输入核心配置信息：");
            CommandLine commandLine = new CommandLine(MainTemplateCommand.class);
            commandLine.execute("--author", "--outputText");
        }
        System.out.println(mainTemplate);
        // 填充数据模型
        DataModel dataModel = new DataModel();
        BeanUtil.copyProperties(this, dataModel);
        dataModel.mainTemplate = mainTemplate;
    }

    public static void main(String[] args) {
        CommandLine commandLine = new CommandLine(TestGroupCommand.class);
//        commandLine.execute("--help");
        commandLine.execute("-g", "-l");
    }

}